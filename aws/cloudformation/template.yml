AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A simple example for AWS SAM

Resources:
  FrontendS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dev-assist-portal
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  # S3 Bucket Policy to allow public access for the Frontend bucket
  FrontendS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "${FrontendS3Bucket.Arn}/*"

  BackendS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dev-assist-backend  # Unique bucket name
      VersioningConfiguration:
        Status: Enabled

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: !Sub "dev-assist-api"

  UserRegistrationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:GetObject
                Resource: 
                  - arn:aws:logs:*:*:*
                  - !Sub "${BackendS3Bucket.Arn}/*"  # Grant access to Backend S3 Bucket

  UserRegistrationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/user-registration.userRegistration
      Description: use to register user
      CodeUri: ../../backend/src
      Runtime: nodejs14.x
      Tracing: Active
      Events:
         Api:
            Type: Api
            Properties:
              RestApiId: !Ref ApiGateway
              Path: /request/users/registration
              Method: POST

Outputs:
  FrontendBucketWebsiteURL:
    Description: "Frontend S3 Bucket URL"
    Value: !GetAtt FrontendS3Bucket.WebsiteURL
  
  ApiUrl:
    Description: "The URL of the API Gateway"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
