AWSTemplateFormatVersion: '2010-09-09'
Description: Create S3 buckets for frontend and backend deployment

Parameters:
  apiName:
    Type: String
  type:
    Type: String

Resources:
  FrontendS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dev-assist-portal
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  # S3 Bucket Policy to allow public access for the Frontend bucket
  FrontendS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "${FrontendS3Bucket.Arn}/*"

  BackendS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dev-assist-backend  # Unique bucket name
      VersioningConfiguration:
        Status: Enabled

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: !Sub "dev-assist-api"

  UserRegistrationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/user-registration.userRegistration
      Description: use to register user
      CodeUri: ./src
      Runtime: nodejs14.x
      Tracing: Active
      Events:
         Api:
            Type: Api
            Properties:
              RestApiId: !Ref ApiGateway
              Path: /request/users/registration
              Method: POST

Outputs:
  FrontendBucketWebsiteURL:
    Description: "Frontend S3 Bucket URL"
    Value: !GetAtt FrontendS3Bucket.WebsiteURL
  
  ApiUrl:
    Description: "The URL of the API Gateway"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
