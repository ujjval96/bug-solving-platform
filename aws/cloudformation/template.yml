AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A simple example for AWS SAM

Resources:
  FrontendS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dev-assist-portal
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false

  # S3 Bucket Policy to allow public access for the Frontend bucket
  FrontendS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "${FrontendS3Bucket.Arn}/*"

  BackendS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dev-assist-backend  # Unique bucket name
      VersioningConfiguration:
        Status: Enabled

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: !Sub "dev-assist-api"


  UserRegistrationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../backend/src
      Description: 'UserRegistrationFunction'
      MemorySize: 128
      Timeout: 3
      Handler: src/handlers/user-registration.userRegistration
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: 
                - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${UserRegistrationFunction}:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${UserRegistrationFunction}:*
      RecursiveLoop: Terminate
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /request/users/registration
            Method: POST
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
        
Outputs:
  FrontendBucketWebsiteURL:
    Description: "Frontend S3 Bucket URL"
    Value: !GetAtt FrontendS3Bucket.WebsiteURL
  
  ApiUrl:
    Description: "The URL of the API Gateway"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
